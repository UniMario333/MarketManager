/*
 * Progetto Universit√† Parthenope di Programmazione 3
 * Mario Daniele 0124001808.
 */
package it.uniparthenope.prog3.daniele.mario.marketmanager.view;

import it.uniparthenope.prog3.daniele.mario.marketmanager.controller.SellingController;
import it.uniparthenope.prog3.daniele.mario.marketmanager.exception.UpdateSellingMaxException;
import it.uniparthenope.prog3.daniele.mario.marketmanager.exception.NegAndZeroException;
import it.uniparthenope.prog3.daniele.mario.marketmanager.model.builder.product.Product;
import it.uniparthenope.prog3.daniele.mario.marketmanager.model.builder.category.Category;

import java.awt.print.PrinterException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Permette all'utente di acquistare i prodotti disponibili nel magazzino con
 * un approccio CRUD.
 * 
 * @see Product
 * 
 * @author Mario Daniele 0124001808
 * @since 1.0
 * @version 1.0
 */
public class SellingView extends javax.swing.JFrame {
    
    /**
     * Creates new form SellingView
     * @throws java.sql.SQLException
     */
    public SellingView() throws SQLException {
        
        this.initComponents();
        this.initRecepit();
        
        this.prodQTY.setText("1");
        
        this.populateTable();
        this.populateCategory();
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        prodName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        prodQTY = new javax.swing.JTextField();
        prodCat = new javax.swing.JComboBox<>();
        printButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        prodTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        billText = new javax.swing.JTextArea();
        refreshButton = new javax.swing.JButton();
        filterButton = new javax.swing.JButton();
        sellButton = new javax.swing.JButton();
        logoutButtonLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel5.setBackground(new java.awt.Color(255, 204, 0));

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        addButton.setBackground(new java.awt.Color(255, 204, 0));
        addButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        addButton.setText("AGGIUNGI");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("FATTURAZIONE");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setText("QUANTITA'");

        prodName.setEditable(false);
        prodName.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel11.setText("SCELTA");

        prodQTY.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        prodCat.setBackground(new java.awt.Color(255, 204, 0));
        prodCat.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        printButton.setBackground(new java.awt.Color(255, 204, 0));
        printButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        printButton.setText("STAMPA");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 204, 0));
        clearButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        clearButton.setText("PULISCI");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        prodTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        prodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "QUANTITA'", "PREZZO", "CATEGORIA", "DESCRIZIONE CAT"
            }
        ));
        prodTable.setRowHeight(24);
        prodTable.setSelectionBackground(new java.awt.Color(255, 204, 0));
        prodTable.setUpdateSelectionOnSort(false);
        prodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(prodTable);

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("LISTA PRODOTTI");

        billText.setEditable(false);
        billText.setColumns(20);
        billText.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        billText.setRows(5);
        jScrollPane6.setViewportView(billText);

        refreshButton.setBackground(new java.awt.Color(255, 204, 0));
        refreshButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        refreshButton.setText("AGGIORNA");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        filterButton.setBackground(new java.awt.Color(255, 204, 0));
        filterButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        filterButton.setText("FILTRA");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        sellButton.setBackground(new java.awt.Color(255, 51, 0));
        sellButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        sellButton.setText("VENDI");
        sellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(107, 107, 107))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(prodQTY, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sellButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(prodCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(filterButton)
                                .addGap(18, 18, 18)
                                .addComponent(refreshButton))
                            .addComponent(jScrollPane6)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton)
                    .addComponent(filterButton))
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prodQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(clearButton))
                        .addGap(0, 57, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(printButton)
                        .addGap(101, 101, 101)
                        .addComponent(sellButton)
                        .addGap(46, 46, 46))))
        );

        logoutButtonLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        logoutButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutButtonLabel.setText("LOGOUT");
        logoutButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 683, Short.MAX_VALUE)
                        .addComponent(logoutButtonLabel))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        
        String selectedCategory = (String) prodCat.getSelectedItem();
        
        try {
            
            this.filteredProductList = sellingController.filteredTable(selectedCategory);
            
            this.filter = true;
            
            this.populateTable();
            
        } catch (SQLException ex) {
            
            Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_filterButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        
        try {
            
            this.productList = sellingController.initTable();
            
            this.populateTable();
            
        } catch (SQLException ex) {
            
            Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        try {
            
            String selectedProduct = prodName.getText();
            int selectedQuantity = Integer.parseInt(prodQTY.getText());
            Product productDB = null;
            
            for(Product product : productList) {
                
                if(product.getName().equals(selectedProduct)) {
                    
                    productDB = product;
                    
                }
                
            }
            
            this.sellingController.addProductPressed(addedProductList, selectedProduct, selectedQuantity, productDB);
            
            this.populateRecepit();
            
        } catch (NegAndZeroException | UpdateSellingMaxException ex) {
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
            Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NumberFormatException ex) {
            
            JOptionPane.showMessageDialog(this, "ERRORE: Inserire un numero intero");
            
            Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NullPointerException ex){
            
            JOptionPane.showMessageDialog(this, "ERRORE: Nessun prodotto selezionato");
            
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        this.clearAndResetUI();
       
    }//GEN-LAST:event_clearButtonActionPerformed

    private void logoutButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonLabelMouseClicked
        
        this.sellingController.logoutPressed();
        
    }//GEN-LAST:event_logoutButtonLabelMouseClicked

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        
        try {
            
            this.billText.print();
            
        } catch (PrinterException e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void prodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodTableMouseClicked
        
        this.prodTable.setDefaultEditor(Object.class, null);
        
        int rowIndexPK = prodTable.getSelectedRow();
        
        Product product = printList.get(rowIndexPK);
        
        this.prodQTY.setText("1");
        this.prodName.setText(product.getName());
        
        /*
        DefaultTableModel tblModel = (DefaultTableModel)prodTable.getModel();
        
        prodTable.setDefaultEditor(Object.class, null);
        
        int rowIndexPK = prodTable.getSelectedRow();
        
        this.prodQTY.setText("1");

        prodName.setText(tblModel.getValueAt(rowIndexPK, 0).toString());*/
        
    }//GEN-LAST:event_prodTableMouseClicked

    private void sellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtonActionPerformed
        
        if (JOptionPane.showConfirmDialog(null, "Completare la vendita?\nLe modifiche verranno salvate nel database", "ATTENZIONE!", 
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            
            try {
                
                // yes option

                this.sellingController.updateDatabase(productList, addedProductList);
                
                this.productList = sellingController.initTable();
                
                this.populateTable();
                this.clearAndResetUI();
                
            } catch (SQLException ex) {
                
                Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
        } else {
            
            // no option
            
        }

    }//GEN-LAST:event_sellButtonActionPerformed
    
    /**
     * Azzera i campi di testo, area e resetta l'interfaccia relativi alla
     * vendita.
     */
    private void clearAndResetUI() {
        
        this.addedProductList = new ArrayList();
        
        this.prodName.setText("");
        this.prodQTY.setText("1");
   
        this.initRecepit();
    
    }
    
    /** Popola la tabella della finestra */
    public void populateTable() throws SQLException {
        
        DefaultTableModel tblModel = (DefaultTableModel)prodTable.getModel();
                 
        tblModel.setRowCount(0);
        
        this.prodTable.setDefaultEditor(Object.class, null);
        
        Integer columns = 5;
        
        Object[] row = new Object[columns];
        
        if(filter) {
            
            this.printList = filteredProductList;
            
        } else {
            
            this.printList = productList;
            
        }
        
        this.filter = false;
            
        for(int indice = 0; indice < printList.size(); indice++) {
            
            row[0] = printList.get(indice).getName();
            row[1] = printList.get(indice).getQuantity();
            row[2] = String.format("%.2f", printList.get(indice).getPrice());
            row[3] = printList.get(indice).getCategory();
            row[4] = printList.get(indice).getCatDescription();
            
            tblModel.addRow(row);
            
        }
        
    }
    
    /*
    public void populateTable() throws SQLException {
        
        DefaultTableModel tblModel = (DefaultTableModel)prodTable.getModel();
                 
        tblModel.setRowCount(0);
        
        prodTable.setDefaultEditor(Object.class, null);
        
        Integer columns = 5;
        
        Object[] row = new Object[columns];
        
        for(int indice = 0; indice < productList.size(); indice++){
            
            row[0] = productList.get(indice).getName();
            row[1] = productList.get(indice).getQuantity();
            row[2] = String.format("%.2f", productList.get(indice).getPrice());
            row[3] = productList.get(indice).getCategory();
            row[4] = productList.get(indice).getCatDescription();
            
            tblModel.addRow(row);
            
        }
        
    }
    */
    
    /** Popola la combo box della finestra */
    private void populateCategory() throws SQLException { 
        
        ArrayList<Category> categoryList = null;
        
        categoryList = sellingController.getCategoryList();
               
        for(Category category : categoryList) { 
            
            prodCat.addItem(category.getName());
            
        }
        
    }
    
    /** Inizializza l'area di testo della finestra */
    private void initRecepit() {
        
        String recepit = null;
        
        recepit = sellingController.recepitInitText();
        
        this.billText.setText(recepit);
        
    }
    
    /** Aggiunge righe di prodotti all'area di testo */
    private void populateRecepit() {
        
        String recepit = sellingController.fillRecepit(addedProductList);
        
        this.billText.setText(recepit);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SellingView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SellingView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    /** inizializza un flag */
    private boolean filter = false;

    /** L'istanza del controller associato a questa view */
    private final SellingController sellingController = new SellingController(this);
    
    /** Crea una lista di prodotti del database restituita dal controller */
    private ArrayList<Product> productList = sellingController.initTable();
    
    /** Crea una lista di prodotti del carrello restituita dal controller */
    private ArrayList<Product> addedProductList = new ArrayList<>();
    
    /** inizializza una lista di prodotti per la stampa */
    private ArrayList<Product> printList = null;
    
    /** 
     * Crea una lista di prodotti filtrata per categoria la selezionata 
     * restituita dal controller.
     */
    private ArrayList<Product> filteredProductList = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextArea billText;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel logoutButtonLabel;
    private javax.swing.JButton printButton;
    private javax.swing.JComboBox<String> prodCat;
    private javax.swing.JTextField prodName;
    private javax.swing.JTextField prodQTY;
    private javax.swing.JTable prodTable;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton sellButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * Progetto Università Parthenope di Programmazione 3
 * Mario Daniele 0124001808.
 */
package it.uniparthenope.prog3.daniele.mario.marketmanager.view;

import it.uniparthenope.prog3.daniele.mario.marketmanager.controller.ProductController;
import it.uniparthenope.prog3.daniele.mario.marketmanager.exception.NegAndZeroException;
import it.uniparthenope.prog3.daniele.mario.marketmanager.exception.StringEmptyException;
import it.uniparthenope.prog3.daniele.mario.marketmanager.model.builder.category.Category;
import it.uniparthenope.prog3.daniele.mario.marketmanager.model.builder.product.Product;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Permette all'utente di interagire con le entità {@code Product} con un
 * approccio CRUD.
 * 
 * @see Product
 * 
 * @author Mario Daniele 0124001808
 * @since 1.0
 * @version 1.0
 */
public class ProductView extends javax.swing.JFrame {

    /**
     * Creates new form ProductView
     * @throws java.sql.SQLException
     */
    public ProductView() throws SQLException {
        
        this.initComponents();
        this.populateTable();
        this.populateCategoryComboBox();
        
        this.prodQTY.setText("0");
        this.prodPrice.setText("0");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        prodName = new javax.swing.JTextField();
        prodPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        prodQTY = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        prodCat = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prodTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        sellerButtonLabel = new javax.swing.JLabel();
        logoutButtonLabel = new javax.swing.JLabel();
        categoryButtonLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        addButton.setBackground(new java.awt.Color(255, 204, 0));
        addButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        addButton.setText("AGGIUNGI");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGER PRODOTTI");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setText("QUANTITA'");

        prodName.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        prodPrice.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel4.setText("NOME");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setText("PREZZO");

        prodQTY.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel7.setText("CATEGORIA");

        prodCat.setBackground(new java.awt.Color(255, 204, 0));
        prodCat.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N

        deleteButton.setBackground(new java.awt.Color(255, 204, 0));
        deleteButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        deleteButton.setText("CANCELLA");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(255, 204, 0));
        editButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        editButton.setText("MODIFICA");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 204, 0));
        clearButton.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        clearButton.setText("PULISCI");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        prodTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        prodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "QUANTITA'", "PREZZO", "CATEGORIA"
            }
        ));
        prodTable.setRowHeight(24);
        prodTable.setSelectionBackground(new java.awt.Color(255, 204, 0));
        prodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(prodTable);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("LISTA PRODOTTI");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(prodCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(prodQTY, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(prodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton)
                .addGap(18, 18, 18)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prodCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(editButton)
                    .addComponent(clearButton)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        sellerButtonLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        sellerButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sellerButtonLabel.setText("VENDITORI");
        sellerButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sellerButtonLabelMouseClicked(evt);
            }
        });

        logoutButtonLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        logoutButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutButtonLabel.setText("LOGOUT");
        logoutButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonLabelMouseClicked(evt);
            }
        });

        categoryButtonLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        categoryButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        categoryButtonLabel.setText("CATEGORIE");
        categoryButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryButtonLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sellerButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logoutButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(categoryButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sellerButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(categoryButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonLabelMouseClicked
        
        this.productController.logoutPressed();
        
    }//GEN-LAST:event_logoutButtonLabelMouseClicked

    private void sellerButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sellerButtonLabelMouseClicked
        
        try {
            
            this.productController.switchToSellerView();
            
        } catch (SQLException ex) {
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_sellerButtonLabelMouseClicked

    private void categoryButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryButtonLabelMouseClicked
       
        try {
            
            this.productController.switchToCategoryView();
            
        } catch (SQLException ex) {
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_categoryButtonLabelMouseClicked

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        this.clearTextFieldProduct();
        
    }//GEN-LAST:event_clearButtonActionPerformed

    private void prodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodTableMouseClicked
        
        this.prodTable.setDefaultEditor(Object.class, null);
        
        int rowIndexPK = prodTable.getSelectedRow();
        
        Product product = productList.get(rowIndexPK);

        this.prodName.setText(product.getName());
        this.prodQTY.setText(String.valueOf(product.getQuantity()));
        this.prodPrice.setText(String.valueOf(product.getPrice()));
        this.prodCat.setSelectedItem(product.getCategory()); 
        
        this.clickProdName = prodName.getText();
        
    }//GEN-LAST:event_prodTableMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        try {
             
            this.productController.addPressed(prodName.getText(), Integer.parseInt(prodQTY.getText()), Float.parseFloat(prodPrice.getText()), prodCat.getSelectedItem().toString());
            
            this.productList = productController.initTable();
            
            this.populateTable();
            
        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(this, "ERRORE: Prodotto già esistente");
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NumberFormatException ex) {
            
            JOptionPane.showMessageDialog(this, "ERRORE: Valore inserito non valido (" + ex.getMessage() + ")");
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NegAndZeroException | StringEmptyException ex) {
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        
        try {
             
            this.productController.updatePressed(prodName.getText(), Integer.parseInt(prodQTY.getText()), Float.parseFloat(prodPrice.getText()), prodCat.getSelectedItem().toString(), clickProdName);
            
            this.productList = productController.initTable();
            
            this.populateTable();
            
        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(this, "ERRORE: Prodotto già esistente");
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NumberFormatException ex) {
            
            JOptionPane.showMessageDialog(this, "ERRORE: Valore inserito non valido (" + ex.getMessage() + ")");
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (StringEmptyException | NegAndZeroException ex) {
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        
         try {
            
            this.productController.deleteProductPressed(prodName.getText());
            
            this.productList = productController.initTable();
            
            this.populateTable();
            
        } catch (SQLException ex) {
            
            Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    /**
     * Azzera i campi di testo dell'interfaccia relativi al prodotto.
     */
    private void clearTextFieldProduct() {
        
        this.prodName.setText("");
        this.prodQTY.setText("0");
        this.prodPrice.setText("0");
        
    }
    
    /** Popola la combo box della finestra */
    private void populateCategoryComboBox() throws SQLException {
        
        ArrayList<Category> categoryList = null;
        
        categoryList = productController.getCategoryList();
               
        for(Category category : categoryList) { 
            
            prodCat.addItem(category.getName());
            
        }
        
    }
    
    /** Popola la tabella della finestra */
    public void populateTable() {
        
        DefaultTableModel tblModel = (DefaultTableModel)prodTable.getModel();
                 
        tblModel.setRowCount(0);
        
        this.prodTable.setDefaultEditor(Object.class, null);
        
        Integer columns = 5;
        
        Object[] row = new Object[columns];
        
        for(int indice = 0; indice < productList.size(); indice++){
            
            row[0] = productList.get(indice).getName();
            row[1] = productList.get(indice).getQuantity();
            row[2] = String.format("%.2f", productList.get(indice).getPrice());
            row[3] = productList.get(indice).getCategory();
            row[4] = productList.get(indice).getCatDescription();
            
            tblModel.addRow(row);
            
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                try {
                    
                    new ProductView().setVisible(true);
                    
                } catch (SQLException ex) {
                    
                    Logger.getLogger(ProductView.class.getName()).log(Level.SEVERE, null, ex);
                    
                }
                
            }
            
        });
        
    }

    /** L'istanza del controller associato a questa view */
    private final ProductController productController = new ProductController(this);
    
    /** Crea una lista di prodotti restituita dal controller */
    private ArrayList<Product> productList = productController.initTable();
    
    /** Inizializza la variabile per il nome del prodotto selezionato */
    private String clickProdName = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel categoryButtonLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoutButtonLabel;
    private javax.swing.JComboBox<String> prodCat;
    private javax.swing.JTextField prodName;
    private javax.swing.JTextField prodPrice;
    private javax.swing.JTextField prodQTY;
    private javax.swing.JTable prodTable;
    private javax.swing.JLabel sellerButtonLabel;
    // End of variables declaration//GEN-END:variables
}
